import { OnInit, EventEmitter, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';
import { PhoneNumber, CountryCallingCode, CountryCode } from 'libphonenumber-js';
import { BehaviorSubject } from 'rxjs';
import { PopoverController } from '@ionic/angular';
export interface CountryInfo {
    emoji: string;
    code: CountryCode;
    name: string;
    numberCode: CountryCallingCode;
}
export declare class UiPhoneInputComponent implements OnInit, OnChanges, OnDestroy {
    private popover;
    private readonly defaultCountry;
    country: PhoneNumber['country'];
    value: string;
    placeholder: string;
    noResultsText: string;
    ionChangePhoneNumber: EventEmitter<import("libphonenumber-js").E164Number>;
    ionChangeValidity: EventEmitter<boolean>;
    _value: BehaviorSubject<import("libphonenumber-js").E164Number>;
    _valueToEmit: BehaviorSubject<import("libphonenumber-js").E164Number>;
    _country: BehaviorSubject<CountryCode>;
    countryNamesByIsoCode: {
        AF: string;
        AL: string;
        DZ: string;
        AS: string;
        AD: string;
        AO: string;
        AI: string;
        AG: string;
        AR: string;
        AM: string;
        AW: string;
        AU: string;
        AT: string;
        AZ: string;
        BS: string;
        BH: string;
        BD: string;
        BB: string;
        BY: string;
        BE: string;
        BZ: string;
        BJ: string;
        BM: string;
        BT: string;
        BO: string;
        BQ: string;
        BA: string;
        BW: string;
        BR: string;
        IO: string;
        BN: string;
        BG: string;
        BF: string;
        BI: string;
        CV: string;
        KH: string;
        CM: string;
        CA: string;
        KY: string;
        CF: string;
        TD: string;
        CL: string;
        CN: string;
        CX: string;
        CC: string;
        CO: string;
        KM: string;
        CD: string;
        CG: string;
        CK: string;
        CR: string;
        HR: string;
        CU: string;
        CW: string;
        CY: string;
        CZ: string;
        CI: string;
        DK: string;
        DJ: string;
        DM: string;
        DO: string;
        EC: string;
        EG: string;
        SV: string;
        GQ: string;
        ER: string;
        EE: string;
        SZ: string;
        ET: string;
        FK: string;
        FO: string;
        FJ: string;
        FI: string;
        FR: string;
        GF: string;
        PF: string;
        GA: string;
        GM: string;
        GE: string;
        DE: string;
        GH: string;
        GI: string;
        GR: string;
        GL: string;
        GD: string;
        GP: string;
        GU: string;
        GT: string;
        GG: string;
        GN: string;
        GW: string;
        GY: string;
        HT: string;
        VA: string;
        HN: string;
        HK: string;
        HU: string;
        IS: string;
        IN: string;
        ID: string;
        IR: string;
        IQ: string;
        IE: string;
        IM: string;
        IL: string;
        IT: string;
        JM: string;
        JP: string;
        JE: string;
        JO: string;
        KZ: string;
        KE: string;
        KI: string;
        KP: string;
        KR: string;
        KW: string;
        KG: string;
        LA: string;
        LV: string;
        LB: string;
        LS: string;
        LR: string;
        LY: string;
        LI: string;
        LT: string;
        LU: string;
        MO: string;
        MG: string;
        MW: string;
        MY: string;
        MV: string;
        ML: string;
        MT: string;
        MH: string;
        MQ: string;
        MR: string;
        MU: string;
        YT: string;
        MX: string;
        FM: string;
        MD: string;
        MC: string;
        MN: string;
        ME: string;
        MS: string;
        MA: string;
        MZ: string;
        MM: string;
        NA: string;
        NR: string;
        NP: string;
        NL: string;
        NC: string;
        NZ: string;
        NI: string;
        NE: string;
        NG: string;
        NU: string;
        NF: string;
        MP: string;
        NO: string;
        OM: string;
        PK: string;
        PW: string;
        PS: string;
        PA: string;
        PG: string;
        PY: string;
        PE: string;
        PH: string;
        PL: string;
        PT: string;
        PR: string;
        QA: string;
        MK: string;
        RO: string;
        RU: string;
        RW: string;
        RE: string;
        BL: string;
        SH: string;
        KN: string;
        LC: string;
        MF: string;
        PM: string;
        VC: string;
        WS: string;
        SM: string;
        ST: string;
        SA: string;
        SN: string;
        RS: string;
        SC: string;
        SL: string;
        SG: string;
        SX: string;
        SK: string;
        SI: string;
        SB: string;
        SO: string;
        ZA: string;
        SS: string;
        ES: string;
        LK: string;
        SD: string;
        SR: string;
        SJ: string;
        SE: string;
        CH: string;
        SY: string;
        TW: string;
        TJ: string;
        TZ: string;
        TH: string;
        TL: string;
        TG: string;
        TK: string;
        TO: string;
        TT: string;
        TN: string;
        TR: string;
        TM: string;
        TC: string;
        TV: string;
        UG: string;
        UA: string;
        AE: string;
        GB: string;
        US: string;
        UY: string;
        UZ: string;
        VU: string;
        VE: string;
        VN: string;
        VG: string;
        VI: string;
        WF: string;
        EH: string;
        YE: string;
        ZM: string;
        ZW: string;
        AX: string;
    };
    emojiRefByIsoCode: Record<string, string>;
    countryInfo?: CountryInfo;
    iterableCountryInfos: CountryInfo[];
    private countrySubscription;
    constructor(popover: PopoverController);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    change(event: CustomEvent): void;
    openCountrySelect(event: Event): Promise<void>;
    private parse;
    private resetFields;
}
