{"version":3,"file":"ui-phone-input.js","sources":["../../src/app/utils/country-codes.ts","../../src/app/ui-phone-input/ui-phone-input/country-select/country-select.component.ts","../../src/app/ui-phone-input/ui-phone-input/ui-phone-input.component.ts","../../src/app/ui-phone-input/ui-phone-input.module.ts","../../ui-phone-input.ts"],"sourcesContent":["// commented out ISO codes not recognized\n\nexport const ISO_COUNTRY_CODE_TO_NAME = {\n  AF: 'Afghanistan',\n  AL: 'Albania',\n  DZ: 'Algeria',\n  AS: 'American Samoa',\n  AD: 'Andorra',\n  AO: 'Angola',\n  AI: 'Anguilla',\n  // AQ: 'Antarctica',\n  AG: 'Antigua and Barbuda',\n  AR: 'Argentina',\n  AM: 'Armenia',\n  AW: 'Aruba',\n  AU: 'Australia',\n  AT: 'Austria',\n  AZ: 'Azerbaijan',\n  BS: 'Bahamas (the)',\n  BH: 'Bahrain',\n  BD: 'Bangladesh',\n  BB: 'Barbados',\n  BY: 'Belarus',\n  BE: 'Belgium',\n  BZ: 'Belize',\n  BJ: 'Benin',\n  BM: 'Bermuda',\n  BT: 'Bhutan',\n  BO: 'Bolivia (Plurinational State of)',\n  BQ: 'Bonaire, Sint Eustatius and Saba',\n  BA: 'Bosnia and Herzegovina',\n  BW: 'Botswana',\n  // BV: 'Bouvet Island',\n  BR: 'Brazil',\n  IO: 'British Indian Ocean Territory (the)',\n  BN: 'Brunei Darussalam',\n  BG: 'Bulgaria',\n  BF: 'Burkina Faso',\n  BI: 'Burundi',\n  CV: 'Cabo Verde',\n  KH: 'Cambodia',\n  CM: 'Cameroon',\n  CA: 'Canada',\n  KY: 'Cayman Islands (the)',\n  CF: 'Central African Republic (the)',\n  TD: 'Chad',\n  CL: 'Chile',\n  CN: 'China',\n  CX: 'Christmas Island',\n  CC: 'Cocos (Keeling) Islands (the)',\n  CO: 'Colombia',\n  KM: 'Comoros (the)',\n  CD: 'Congo (the Democratic Republic of the)',\n  CG: 'Congo (the)',\n  CK: 'Cook Islands (the)',\n  CR: 'Costa Rica',\n  HR: 'Croatia',\n  CU: 'Cuba',\n  CW: 'Curaçao',\n  CY: 'Cyprus',\n  CZ: 'Czechia',\n  CI: \"Côte d'Ivoire\",\n  DK: 'Denmark',\n  DJ: 'Djibouti',\n  DM: 'Dominica',\n  DO: 'Dominican Republic (the)',\n  EC: 'Ecuador',\n  EG: 'Egypt',\n  SV: 'El Salvador',\n  GQ: 'Equatorial Guinea',\n  ER: 'Eritrea',\n  EE: 'Estonia',\n  SZ: 'Eswatini',\n  ET: 'Ethiopia',\n  FK: 'Falkland Islands (the) [Malvinas]',\n  FO: 'Faroe Islands (the)',\n  FJ: 'Fiji',\n  FI: 'Finland',\n  FR: 'France',\n  GF: 'French Guiana',\n  PF: 'French Polynesia',\n  // TF: 'French Southern Territories (the)',\n  GA: 'Gabon',\n  GM: 'Gambia (the)',\n  GE: 'Georgia',\n  DE: 'Germany',\n  GH: 'Ghana',\n  GI: 'Gibraltar',\n  GR: 'Greece',\n  GL: 'Greenland',\n  GD: 'Grenada',\n  GP: 'Guadeloupe',\n  GU: 'Guam',\n  GT: 'Guatemala',\n  GG: 'Guernsey',\n  GN: 'Guinea',\n  GW: 'Guinea-Bissau',\n  GY: 'Guyana',\n  HT: 'Haiti',\n  // HM: 'Heard Island and McDonald Islands',\n  VA: 'Holy See (the)',\n  HN: 'Honduras',\n  HK: 'Hong Kong',\n  HU: 'Hungary',\n  IS: 'Iceland',\n  IN: 'India',\n  ID: 'Indonesia',\n  IR: 'Iran (Islamic Republic of)',\n  IQ: 'Iraq',\n  IE: 'Ireland',\n  IM: 'Isle of Man',\n  IL: 'Israel',\n  IT: 'Italy',\n  JM: 'Jamaica',\n  JP: 'Japan',\n  JE: 'Jersey',\n  JO: 'Jordan',\n  KZ: 'Kazakhstan',\n  KE: 'Kenya',\n  KI: 'Kiribati',\n  KP: \"Korea (the Democratic People's Republic of)\",\n  KR: 'Korea (the Republic of)',\n  KW: 'Kuwait',\n  KG: 'Kyrgyzstan',\n  LA: \"Lao People's Democratic Republic (the)\",\n  LV: 'Latvia',\n  LB: 'Lebanon',\n  LS: 'Lesotho',\n  LR: 'Liberia',\n  LY: 'Libya',\n  LI: 'Liechtenstein',\n  LT: 'Lithuania',\n  LU: 'Luxembourg',\n  MO: 'Macao',\n  MG: 'Madagascar',\n  MW: 'Malawi',\n  MY: 'Malaysia',\n  MV: 'Maldives',\n  ML: 'Mali',\n  MT: 'Malta',\n  MH: 'Marshall Islands (the)',\n  MQ: 'Martinique',\n  MR: 'Mauritania',\n  MU: 'Mauritius',\n  YT: 'Mayotte',\n  MX: 'Mexico',\n  FM: 'Micronesia (Federated States of)',\n  MD: 'Moldova (the Republic of)',\n  MC: 'Monaco',\n  MN: 'Mongolia',\n  ME: 'Montenegro',\n  MS: 'Montserrat',\n  MA: 'Morocco',\n  MZ: 'Mozambique',\n  MM: 'Myanmar',\n  NA: 'Namibia',\n  NR: 'Nauru',\n  NP: 'Nepal',\n  NL: 'Netherlands (the)',\n  NC: 'New Caledonia',\n  NZ: 'New Zealand',\n  NI: 'Nicaragua',\n  NE: 'Niger (the)',\n  NG: 'Nigeria',\n  NU: 'Niue',\n  NF: 'Norfolk Island',\n  MP: 'Northern Mariana Islands (the)',\n  NO: 'Norway',\n  OM: 'Oman',\n  PK: 'Pakistan',\n  PW: 'Palau',\n  PS: 'Palestine, State of',\n  PA: 'Panama',\n  PG: 'Papua New Guinea',\n  PY: 'Paraguay',\n  PE: 'Peru',\n  PH: 'Philippines (the)',\n  // PN: 'Pitcairn',\n  PL: 'Poland',\n  PT: 'Portugal',\n  PR: 'Puerto Rico',\n  QA: 'Qatar',\n  MK: 'Republic of North Macedonia',\n  RO: 'Romania',\n  RU: 'Russian Federation (the)',\n  RW: 'Rwanda',\n  RE: 'Réunion',\n  BL: 'Saint Barthélemy',\n  SH: 'Saint Helena, Ascension and Tristan da Cunha',\n  KN: 'Saint Kitts and Nevis',\n  LC: 'Saint Lucia',\n  MF: 'Saint Martin (French part)',\n  PM: 'Saint Pierre and Miquelon',\n  VC: 'Saint Vincent and the Grenadines',\n  WS: 'Samoa',\n  SM: 'San Marino',\n  ST: 'Sao Tome and Principe',\n  SA: 'Saudi Arabia',\n  SN: 'Senegal',\n  RS: 'Serbia',\n  SC: 'Seychelles',\n  SL: 'Sierra Leone',\n  SG: 'Singapore',\n  SX: 'Sint Maarten (Dutch part)',\n  SK: 'Slovakia',\n  SI: 'Slovenia',\n  SB: 'Solomon Islands',\n  SO: 'Somalia',\n  ZA: 'South Africa',\n  // GS: 'South Georgia and the South Sandwich Islands',\n  SS: 'South Sudan',\n  ES: 'Spain',\n  LK: 'Sri Lanka',\n  SD: 'Sudan (the)',\n  SR: 'Suriname',\n  SJ: 'Svalbard and Jan Mayen',\n  SE: 'Sweden',\n  CH: 'Switzerland',\n  SY: 'Syrian Arab Republic',\n  TW: 'Taiwan',\n  TJ: 'Tajikistan',\n  TZ: 'Tanzania, United Republic of',\n  TH: 'Thailand',\n  TL: 'Timor-Leste',\n  TG: 'Togo',\n  TK: 'Tokelau',\n  TO: 'Tonga',\n  TT: 'Trinidad and Tobago',\n  TN: 'Tunisia',\n  TR: 'Turkey',\n  TM: 'Turkmenistan',\n  TC: 'Turks and Caicos Islands (the)',\n  TV: 'Tuvalu',\n  UG: 'Uganda',\n  UA: 'Ukraine',\n  AE: 'United Arab Emirates (the)',\n  GB: 'United Kingdom of Great Britain and Northern Ireland (the)',\n  // UM: 'United States Minor Outlying Islands (the)',\n  US: 'United States of America (the)',\n  UY: 'Uruguay',\n  UZ: 'Uzbekistan',\n  VU: 'Vanuatu',\n  VE: 'Venezuela (Bolivarian Republic of)',\n  VN: 'Viet Nam',\n  VG: 'Virgin Islands (British)',\n  VI: 'Virgin Islands (U.S.)',\n  WF: 'Wallis and Futuna',\n  EH: 'Western Sahara',\n  YE: 'Yemen',\n  ZM: 'Zambia',\n  ZW: 'Zimbabwe',\n  AX: 'Åland Islands',\n};\n","import {\n  Component,\n  Input,\n  AfterViewInit,\n  ElementRef,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { CountryInfo } from '../ui-phone-input.component';\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'country-select',\n  templateUrl: './country-select.component.html',\n  styleUrls: ['./country-select.component.scss'],\n})\nexport class CountrySelectComponent\n  implements OnInit, AfterViewInit, OnDestroy {\n  public popover: HTMLIonPopoverElement;\n\n  @Input() countries: CountryInfo[];\n  @Input() selected: CountryInfo;\n  @Input() noResultsText: string;\n\n  @Output() ionChange = new EventEmitter<CountryInfo>();\n\n  public filteredCountries?: CountryInfo[];\n\n  private searchString = '';\n  private selectAll: boolean;\n  private keySubscription?: Subscription;\n\n  constructor(private el: ElementRef<HTMLDivElement>) {}\n\n  ngOnInit() {\n    this.keySubscription = fromEvent(document, 'keydown').subscribe(\n      (e: KeyboardEvent) => {\n        if (e.key === 'a' && (e.metaKey || e.ctrlKey)) {\n          e.preventDefault();\n          this.selectAll = true;\n        }\n\n        if (e.key.length === 1) {\n          this.searchString = `${this.searchString}${e.key}`;\n        }\n        if (e.key === 'Backspace' && this.searchString.length) {\n          this.searchString = this.selectAll\n            ? ''\n            : this.searchString.slice(0, this.searchString.length - 1);\n          this.selectAll = false;\n        }\n        this.filter();\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    const selectedItem = this.el.nativeElement.querySelector<\n      HTMLIonItemElement\n    >(`#${this.selected.code}`);\n\n    setTimeout(async () => {\n      selectedItem?.scrollIntoView();\n      selectedItem?.focus();\n    }, 500);\n  }\n\n  ngOnDestroy() {\n    this.keySubscription?.unsubscribe();\n  }\n\n  filter() {\n    this.filteredCountries = !this.searchString\n      ? undefined\n      : this.countries.filter((country) =>\n          country.name.toLowerCase().includes(this.searchString.toLowerCase())\n        );\n  }\n}\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n} from '@angular/core';\nimport flag from 'country-code-emoji';\nimport { ISO_COUNTRY_CODE_TO_NAME } from '../../utils/country-codes';\nimport {\n  parsePhoneNumberFromString,\n  PhoneNumber,\n  getCountryCallingCode,\n  CountryCallingCode,\n  CountryCode,\n} from 'libphonenumber-js';\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { PopoverController } from '@ionic/angular';\nimport { CountrySelectComponent } from './country-select/country-select.component';\n\nexport interface CountryInfo {\n  emoji: string;\n  code: CountryCode;\n  name: string;\n  numberCode: CountryCallingCode;\n}\n\n@Component({\n  selector: 'ui-phone-input',\n  templateUrl: './ui-phone-input.component.html',\n  styleUrls: ['./ui-phone-input.component.scss'],\n})\nexport class UiPhoneInputComponent implements OnInit, OnChanges, OnDestroy {\n  private readonly defaultCountry = 'US';\n\n  @Input() country: PhoneNumber['country'] = this.defaultCountry;\n  @Input() value: string;\n  @Input() placeholder: string;\n  @Input() noResultsText = 'No Results';\n\n  @Output() ionChangePhoneNumber = new EventEmitter<\n    UiPhoneInputComponent['_valueToEmit']['value']\n  >();\n  @Output() ionChangeValidity = new EventEmitter<boolean>();\n\n  public _value = new BehaviorSubject<PhoneNumber['number'] | undefined>(\n    undefined\n  );\n\n  public _valueToEmit = new BehaviorSubject<PhoneNumber['number'] | undefined>(\n    undefined\n  );\n\n  public _country = new BehaviorSubject<PhoneNumber['country']>(undefined);\n\n  public countryNamesByIsoCode = ISO_COUNTRY_CODE_TO_NAME;\n  public emojiRefByIsoCode: Record<string, string>;\n\n  public countryInfo?: CountryInfo;\n  public iterableCountryInfos: CountryInfo[] = [];\n\n  private countrySubscription: Subscription;\n\n  constructor(private popover: PopoverController) {}\n\n  ngOnInit() {\n    this.emojiRefByIsoCode = Object.keys(this.countryNamesByIsoCode).reduce<\n      UiPhoneInputComponent['emojiRefByIsoCode']\n    >((map, code) => {\n      map[code] = flag(code);\n      this.iterableCountryInfos.push({\n        emoji: map[code],\n        name: this.countryNamesByIsoCode[code],\n        code: <CountryCode>code,\n        numberCode: getCountryCallingCode(<CountryCode>code),\n      });\n      return map;\n    }, {});\n\n    this.countrySubscription = this._country\n      .asObservable()\n      .subscribe((_code) => {\n        const code = _code ?? this.defaultCountry;\n\n        this.countryInfo = {\n          emoji: this.emojiRefByIsoCode[code],\n          name: this.countryNamesByIsoCode[code],\n          code,\n          numberCode: getCountryCallingCode(code),\n        };\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    console.log(changes);\n    if (changes.value || changes.country) {\n      if (this.value) {\n        this.parse();\n      } else {\n        this.resetFields();\n      }\n    }\n\n    if (\n      ((changes.value && !changes.value.isFirstChange()) ||\n        (changes.country && !changes.country.isFirstChange())) &&\n      this._value.value !== this.value\n    ) {\n      this.ionChangePhoneNumber.emit(this._valueToEmit.value);\n    }\n\n    if (!this._country.value) {\n      this._country.next(this.defaultCountry);\n    }\n\n    if (changes.country && this.country) {\n      this._country.next(this.country);\n    }\n  }\n\n  ngOnDestroy() {\n    this.countrySubscription.unsubscribe();\n  }\n\n  change(event: CustomEvent) {\n    if (event.detail.value) {\n      this.parse(event.detail.value);\n    } else {\n      this.resetFields();\n      this.ionChangeValidity.emit(false);\n    }\n    this.ionChangePhoneNumber.emit(this._valueToEmit.value);\n  }\n\n  async openCountrySelect(event: Event) {\n    const popover = await this.popover.create({\n      component: CountrySelectComponent,\n      componentProps: {\n        noResultsText: this.noResultsText,\n        countries: this.iterableCountryInfos,\n        selected: this.countryInfo,\n        ionChange: {\n          emit: (countryInfo: CountryInfo) => {\n            console.log('emit');\n            this._country.next(countryInfo.code);\n            if (this._value.value) {\n              this.parse(this._value.value.toString());\n            }\n            this.ionChangePhoneNumber.emit(this._valueToEmit.value);\n          },\n        },\n      },\n      cssClass: 'country-popover',\n      event,\n      showBackdrop: false,\n      animated: false,\n    });\n\n    return popover.present();\n  }\n\n  private parse(value = this.value) {\n    const parsedPhoneNumber = parsePhoneNumberFromString(\n      value,\n      this._country.value\n    );\n\n    this._value.next(parsedPhoneNumber?.nationalNumber);\n    this._valueToEmit.next(parsedPhoneNumber?.number);\n\n    if (parsedPhoneNumber) {\n      this._country.next(parsedPhoneNumber.country);\n    }\n\n    this.ionChangeValidity.emit(!!parsedPhoneNumber?.isValid());\n  }\n\n  private resetFields() {\n    this._value.next(undefined);\n    this._valueToEmit.next(undefined);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { UiPhoneInputComponent } from './ui-phone-input/ui-phone-input.component';\nimport { CountrySelectComponent } from './ui-phone-input/country-select/country-select.component';\nconst components = [UiPhoneInputComponent, CountrySelectComponent];\n\n@NgModule({\n  declarations: [...components],\n  imports: [IonicModule, CommonModule],\n  exports: [...components],\n  entryComponents: [],\n})\nexport class UiPhoneInputModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}